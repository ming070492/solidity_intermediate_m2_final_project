import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@src/styles/Home.module.css'
import { useState } from 'react'
import {ethers} from "ethers";
import contract_abi from '@src/src/artifacts/contracts/BankingContract.sol/BankingContract.json';
const inter = Inter({ subsets: ['latin'] })

const contractAddress = "0x5FbDB2315678afecb367f032d93F642f64180aa3";
const BankingContractAbi = contract_abi.abi;

export default function Home() {

  const [isConnected, setIsConnected] = useState(false);
  const [provider, setProvider] = useState();
  const [connectedWallet, setIsConnectedWallet] = useState();
  const [contract, setContract] = useState();
  const [signer, setSigner] = useState();

  
     
  const connectMetamask = async() => {
  
    if(typeof window.ethereum !== "undefined") {
      try {
        let wallet = await ethereum.request({ method: "eth_requestAccounts" });
        setIsConnectedWallet(wallet);
        setIsConnected(true);
        const connectedProvider = new ethers.providers.Web3Provider(window.ethereum);
        const _signer = connectedProvider.getSigner();
        setProvider(connectedProvider);
        setSigner(_signer);
      } catch (e) {
        console.log(e);
      }
    }else{
      setIsConnected(false);
    }
    await  callContract();
  }

  const callContract = async() => {
    const bankingContract = new ethers.Contract(contractAddress, BankingContractAbi, signer);
    setContract(bankingContract);
  }



const balanceInquiry = async() => {
  console.log(JSON.stringify(contract));
  contract.bal_inquiry();
} 

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        {!isConnected && <button onClick={connectMetamask}>CONNECT</button>}
        {isConnected && <div><button disabled>CONNECTED</button>WALLET ADDRESS: {connectedWallet}</div>}
        <button onClick={balanceInquiry}>TRY CONTRACT</button>
      </main>
    </>
  )
}
